//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using LinqConnect template.
// Code is generated on: 18/08/2022 17:56:05
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using Devart.Data.Linq;
using Devart.Data.Linq.Mapping;
using System.Data;
using System.ComponentModel;
using System.Collections.Generic;
using System.Reflection;
using System.Linq;
using System.Linq.Expressions;

namespace AnimaliContext
{

    [DatabaseAttribute(Name = "animali")]
    [ProviderAttribute(typeof(Devart.Data.MySql.Linq.Provider.MySqlDataProvider))]
    public partial class AnimaliDataContext : Devart.Data.Linq.DataContext
    {
        public static CompiledQueryCache compiledQueryCache = CompiledQueryCache.RegisterDataContext(typeof(AnimaliDataContext));
        private static MappingSource mappingSource = new Devart.Data.Linq.Mapping.AttributeMappingSource();

        #region Extensibility Method Definitions
    
        partial void OnCreated();
        partial void OnSubmitError(Devart.Data.Linq.SubmitErrorEventArgs args);
        partial void InsertAdozione(Adozione instance);
        partial void UpdateAdozione(Adozione instance);
        partial void DeleteAdozione(Adozione instance);
        partial void InsertAdozioneAnimale(AdozioneAnimale instance);
        partial void UpdateAdozioneAnimale(AdozioneAnimale instance);
        partial void DeleteAdozioneAnimale(AdozioneAnimale instance);
        partial void InsertAltro(Altro instance);
        partial void UpdateAltro(Altro instance);
        partial void DeleteAltro(Altro instance);
        partial void InsertCane(Cane instance);
        partial void UpdateCane(Cane instance);
        partial void DeleteCane(Cane instance);
        partial void InsertCartellaClinica(CartellaClinica instance);
        partial void UpdateCartellaClinica(CartellaClinica instance);
        partial void DeleteCartellaClinica(CartellaClinica instance);
        partial void InsertEsecuzione(Esecuzione instance);
        partial void UpdateEsecuzione(Esecuzione instance);
        partial void DeleteEsecuzione(Esecuzione instance);
        partial void InsertGabbia(Gabbia instance);
        partial void UpdateGabbia(Gabbia instance);
        partial void DeleteGabbia(Gabbia instance);
        partial void InsertGiorno(Giorno instance);
        partial void UpdateGiorno(Giorno instance);
        partial void DeleteGiorno(Giorno instance);
        partial void InsertIntolleranza(Intolleranza instance);
        partial void UpdateIntolleranza(Intolleranza instance);
        partial void DeleteIntolleranza(Intolleranza instance);
        partial void InsertMedicinale(Medicinale instance);
        partial void UpdateMedicinale(Medicinale instance);
        partial void DeleteMedicinale(Medicinale instance);
        partial void InsertPersona(Persona instance);
        partial void UpdatePersona(Persona instance);
        partial void DeletePersona(Persona instance);
        partial void InsertTurnoDiLavoro(TurnoDiLavoro instance);
        partial void UpdateTurnoDiLavoro(TurnoDiLavoro instance);
        partial void DeleteTurnoDiLavoro(TurnoDiLavoro instance);
        partial void InsertVaccino(Vaccino instance);
        partial void UpdateVaccino(Vaccino instance);
        partial void DeleteVaccino(Vaccino instance);
        partial void InsertVisitaMedica(VisitaMedica instance);
        partial void UpdateVisitaMedica(VisitaMedica instance);
        partial void DeleteVisitaMedica(VisitaMedica instance);

        #endregion

        public AnimaliDataContext() :
        base(GetConnectionString("AnimaliDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        public AnimaliDataContext(MappingSource mappingSource) :
        base(GetConnectionString("AnimaliDataContextConnectionString"), mappingSource)
        {
            OnCreated();
        }

        private static string GetConnectionString(string connectionStringName)
        {
            System.Configuration.ConnectionStringSettings connectionStringSettings = System.Configuration.ConfigurationManager.ConnectionStrings[connectionStringName];
            if (connectionStringSettings == null)
                throw new InvalidOperationException("Connection string \"" + connectionStringName +"\" could not be found in the configuration file.");
            return connectionStringSettings.ConnectionString;
        }

        public AnimaliDataContext(string connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public AnimaliDataContext(System.Data.IDbConnection connection) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public AnimaliDataContext(string connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public AnimaliDataContext(System.Data.IDbConnection connection, MappingSource mappingSource) :
            base(connection, mappingSource)
        {
          OnCreated();
        }

        public Devart.Data.Linq.Table<Adozione> Adoziones
        {
            get
            {
                return this.GetTable<Adozione>();
            }
        }

        public Devart.Data.Linq.Table<AdozioneAnimale> AdozioneAnimales
        {
            get
            {
                return this.GetTable<AdozioneAnimale>();
            }
        }

        public Devart.Data.Linq.Table<Altro> Altros
        {
            get
            {
                return this.GetTable<Altro>();
            }
        }

        public Devart.Data.Linq.Table<Cane> Canes
        {
            get
            {
                return this.GetTable<Cane>();
            }
        }

        public Devart.Data.Linq.Table<CartellaClinica> CartellaClinicas
        {
            get
            {
                return this.GetTable<CartellaClinica>();
            }
        }

        public Devart.Data.Linq.Table<Esecuzione> Esecuziones
        {
            get
            {
                return this.GetTable<Esecuzione>();
            }
        }

        public Devart.Data.Linq.Table<Gabbia> Gabbias
        {
            get
            {
                return this.GetTable<Gabbia>();
            }
        }

        public Devart.Data.Linq.Table<Giorno> Giornos
        {
            get
            {
                return this.GetTable<Giorno>();
            }
        }

        public Devart.Data.Linq.Table<Intolleranza> Intolleranzas
        {
            get
            {
                return this.GetTable<Intolleranza>();
            }
        }

        public Devart.Data.Linq.Table<Medicinale> Medicinales
        {
            get
            {
                return this.GetTable<Medicinale>();
            }
        }

        public Devart.Data.Linq.Table<Persona> Personas
        {
            get
            {
                return this.GetTable<Persona>();
            }
        }

        public Devart.Data.Linq.Table<TurnoDiLavoro> TurnoDiLavoros
        {
            get
            {
                return this.GetTable<TurnoDiLavoro>();
            }
        }

        public Devart.Data.Linq.Table<Vaccino> Vaccinos
        {
            get
            {
                return this.GetTable<Vaccino>();
            }
        }

        public Devart.Data.Linq.Table<VisitaMedica> VisitaMedicas
        {
            get
            {
                return this.GetTable<VisitaMedica>();
            }
        }
    }
}

namespace AnimaliContext
{

    /// <summary>
    /// There are no comments for AnimaliContext.Adozione in the schema.
    /// </summary>
    [Table(Name = @"animali.adozione")]
    public partial class Adozione : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceCane;

        private System.DateTime _DataAdozione;

        private string _CodiceFiscale;
        #pragma warning restore 0649

        private EntityRef<Cane> _Cane;

        private EntityRef<Persona> _Persona;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceCaneChanging(int value);
        partial void OnCodiceCaneChanged();
        partial void OnDataAdozioneChanging(System.DateTime value);
        partial void OnDataAdozioneChanged();
        partial void OnCodiceFiscaleChanging(string value);
        partial void OnCodiceFiscaleChanged();
        #endregion

        public Adozione()
        {
            this._Cane  = default(EntityRef<Cane>);
            this._Persona  = default(EntityRef<Persona>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceCane in the schema.
        /// </summary>
        [Column(Name = @"Codice_cane", Storage = "_CodiceCane", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceCane
        {
            get
            {
                return this._CodiceCane;
            }
            set
            {
                if (this._CodiceCane != value)
                {
                    if (this._Cane.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceCaneChanging(value);
                    this.SendPropertyChanging("CodiceCane");
                    this._CodiceCane = value;
                    this.SendPropertyChanged("CodiceCane");
                    this.OnCodiceCaneChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DataAdozione in the schema.
        /// </summary>
        [Column(Name = @"Data_adozione", Storage = "_DataAdozione", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime DataAdozione
        {
            get
            {
                return this._DataAdozione;
            }
            set
            {
                if (this._DataAdozione != value)
                {
                    this.OnDataAdozioneChanging(value);
                    this.SendPropertyChanging("DataAdozione");
                    this._DataAdozione = value;
                    this.SendPropertyChanged("DataAdozione");
                    this.OnDataAdozioneChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceFiscale in the schema.
        /// </summary>
        [Column(Name = @"Codice_Fiscale", Storage = "_CodiceFiscale", CanBeNull = false, DbType = "CHAR(16) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CodiceFiscale
        {
            get
            {
                return this._CodiceFiscale;
            }
            set
            {
                if (this._CodiceFiscale != value)
                {
                    if (this._Persona.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceFiscaleChanging(value);
                    this.SendPropertyChanging("CodiceFiscale");
                    this._CodiceFiscale = value;
                    this.SendPropertyChanged("CodiceFiscale");
                    this.OnCodiceFiscaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cane in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Cane_Adozione", Storage="_Cane", ThisKey="CodiceCane", OtherKey="CodiceCane", IsForeignKey=true)]
        public Cane Cane
        {
            get
            {
                return this._Cane.Entity;
            }
            set
            {
                Cane previousValue = this._Cane.Entity;
                if ((previousValue != value) || (this._Cane.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Cane");
                    if (previousValue != null)
                    {
                        this._Cane.Entity = null;
                        previousValue.Adozione = null;
                    }
                    this._Cane.Entity = value;
                    if (value != null)
                    {
                        this._CodiceCane = value.CodiceCane;
                        value.Adozione = this;
                    }
                    else
                    {
                        this._CodiceCane = default(int);
                    }
                    this.SendPropertyChanged("Cane");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Persona in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_Adozione", Storage="_Persona", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
        public Persona Persona
        {
            get
            {
                return this._Persona.Entity;
            }
            set
            {
                Persona previousValue = this._Persona.Entity;
                if ((previousValue != value) || (this._Persona.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Persona");
                    if (previousValue != null)
                    {
                        this._Persona.Entity = null;
                        previousValue.Adoziones.Remove(this);
                    }
                    this._Persona.Entity = value;
                    if (value != null)
                    {
                        this._CodiceFiscale = value.CodiceFiscale;
                        value.Adoziones.Add(this);
                    }
                    else
                    {
                        this._CodiceFiscale = default(string);
                    }
                    this.SendPropertyChanged("Persona");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.AdozioneAnimale in the schema.
    /// </summary>
    [Table(Name = @"animali.adozione_animale")]
    public partial class AdozioneAnimale : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceAnimale;

        private System.DateTime _DataAdozione;

        private string _CodiceFiscale;
        #pragma warning restore 0649

        private EntityRef<Persona> _Persona;

        private EntityRef<Altro> _Altro;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceAnimaleChanging(int value);
        partial void OnCodiceAnimaleChanged();
        partial void OnDataAdozioneChanging(System.DateTime value);
        partial void OnDataAdozioneChanged();
        partial void OnCodiceFiscaleChanging(string value);
        partial void OnCodiceFiscaleChanged();
        #endregion

        public AdozioneAnimale()
        {
            this._Persona  = default(EntityRef<Persona>);
            this._Altro  = default(EntityRef<Altro>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceAnimale in the schema.
        /// </summary>
        [Column(Name = @"Codice_animale", Storage = "_CodiceAnimale", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceAnimale
        {
            get
            {
                return this._CodiceAnimale;
            }
            set
            {
                if (this._CodiceAnimale != value)
                {
                    if (this._Altro.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceAnimaleChanging(value);
                    this.SendPropertyChanging("CodiceAnimale");
                    this._CodiceAnimale = value;
                    this.SendPropertyChanged("CodiceAnimale");
                    this.OnCodiceAnimaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DataAdozione in the schema.
        /// </summary>
        [Column(Name = @"Data_adozione", Storage = "_DataAdozione", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime DataAdozione
        {
            get
            {
                return this._DataAdozione;
            }
            set
            {
                if (this._DataAdozione != value)
                {
                    this.OnDataAdozioneChanging(value);
                    this.SendPropertyChanging("DataAdozione");
                    this._DataAdozione = value;
                    this.SendPropertyChanged("DataAdozione");
                    this.OnDataAdozioneChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceFiscale in the schema.
        /// </summary>
        [Column(Name = @"Codice_Fiscale", Storage = "_CodiceFiscale", CanBeNull = false, DbType = "CHAR(16) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CodiceFiscale
        {
            get
            {
                return this._CodiceFiscale;
            }
            set
            {
                if (this._CodiceFiscale != value)
                {
                    if (this._Persona.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceFiscaleChanging(value);
                    this.SendPropertyChanging("CodiceFiscale");
                    this._CodiceFiscale = value;
                    this.SendPropertyChanged("CodiceFiscale");
                    this.OnCodiceFiscaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Persona in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_AdozioneAnimale", Storage="_Persona", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
        public Persona Persona
        {
            get
            {
                return this._Persona.Entity;
            }
            set
            {
                Persona previousValue = this._Persona.Entity;
                if ((previousValue != value) || (this._Persona.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Persona");
                    if (previousValue != null)
                    {
                        this._Persona.Entity = null;
                        previousValue.AdozioneAnimales.Remove(this);
                    }
                    this._Persona.Entity = value;
                    if (value != null)
                    {
                        this._CodiceFiscale = value.CodiceFiscale;
                        value.AdozioneAnimales.Add(this);
                    }
                    else
                    {
                        this._CodiceFiscale = default(string);
                    }
                    this.SendPropertyChanged("Persona");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Altro in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Altro_AdozioneAnimale", Storage="_Altro", ThisKey="CodiceAnimale", OtherKey="CodiceAnimale", IsForeignKey=true)]
        public Altro Altro
        {
            get
            {
                return this._Altro.Entity;
            }
            set
            {
                Altro previousValue = this._Altro.Entity;
                if ((previousValue != value) || (this._Altro.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Altro");
                    if (previousValue != null)
                    {
                        this._Altro.Entity = null;
                        previousValue.AdozioneAnimale = null;
                    }
                    this._Altro.Entity = value;
                    if (value != null)
                    {
                        this._CodiceAnimale = value.CodiceAnimale;
                        value.AdozioneAnimale = this;
                    }
                    else
                    {
                        this._CodiceAnimale = default(int);
                    }
                    this.SendPropertyChanged("Altro");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Altro in the schema.
    /// </summary>
    [Table(Name = @"animali.altro")]
    public partial class Altro : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceAnimale;

        private int _CodiceCartella;

        private string _TipoAnimale;

        private int _CodiceGabbia;
        #pragma warning restore 0649

        private EntityRef<AdozioneAnimale> _AdozioneAnimale;

        private EntityRef<Gabbia> _Gabbia;

        private EntityRef<CartellaClinica> _CartellaClinica;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceAnimaleChanging(int value);
        partial void OnCodiceAnimaleChanged();
        partial void OnCodiceCartellaChanging(int value);
        partial void OnCodiceCartellaChanged();
        partial void OnTipoAnimaleChanging(string value);
        partial void OnTipoAnimaleChanged();
        partial void OnCodiceGabbiaChanging(int value);
        partial void OnCodiceGabbiaChanged();
        #endregion

        public Altro()
        {
            this._AdozioneAnimale  = default(EntityRef<AdozioneAnimale>);
            this._Gabbia  = default(EntityRef<Gabbia>);
            this._CartellaClinica  = default(EntityRef<CartellaClinica>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceAnimale in the schema.
        /// </summary>
        [Column(Name = @"Codice_animale", Storage = "_CodiceAnimale", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceAnimale
        {
            get
            {
                return this._CodiceAnimale;
            }
            set
            {
                if (this._CodiceAnimale != value)
                {
                    if (this._AdozioneAnimale.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceAnimaleChanging(value);
                    this.SendPropertyChanging("CodiceAnimale");
                    this._CodiceAnimale = value;
                    this.SendPropertyChanged("CodiceAnimale");
                    this.OnCodiceAnimaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceCartella in the schema.
        /// </summary>
        [Column(Name = @"Codice_cartella", Storage = "_CodiceCartella", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CodiceCartella
        {
            get
            {
                return this._CodiceCartella;
            }
            set
            {
                if (this._CodiceCartella != value)
                {
                    if (this._CartellaClinica.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceCartellaChanging(value);
                    this.SendPropertyChanging("CodiceCartella");
                    this._CodiceCartella = value;
                    this.SendPropertyChanged("CodiceCartella");
                    this.OnCodiceCartellaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for TipoAnimale in the schema.
        /// </summary>
        [Column(Name = @"Tipo_animale", Storage = "_TipoAnimale", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string TipoAnimale
        {
            get
            {
                return this._TipoAnimale;
            }
            set
            {
                if (this._TipoAnimale != value)
                {
                    this.OnTipoAnimaleChanging(value);
                    this.SendPropertyChanging("TipoAnimale");
                    this._TipoAnimale = value;
                    this.SendPropertyChanged("TipoAnimale");
                    this.OnTipoAnimaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceGabbia in the schema.
        /// </summary>
        [Column(Name = @"codice_gabbia", Storage = "_CodiceGabbia", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CodiceGabbia
        {
            get
            {
                return this._CodiceGabbia;
            }
            set
            {
                if (this._CodiceGabbia != value)
                {
                    if (this._Gabbia.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceGabbiaChanging(value);
                    this.SendPropertyChanging("CodiceGabbia");
                    this._CodiceGabbia = value;
                    this.SendPropertyChanged("CodiceGabbia");
                    this.OnCodiceGabbiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for AdozioneAnimale in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Altro_AdozioneAnimale", Storage="_AdozioneAnimale", ThisKey="CodiceAnimale", OtherKey="CodiceAnimale", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
        public AdozioneAnimale AdozioneAnimale
        {
            get
            {
                return this._AdozioneAnimale.Entity;
            }
            set
            {
                AdozioneAnimale previousValue = this._AdozioneAnimale.Entity;
                if ((previousValue != value) || (this._AdozioneAnimale.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("AdozioneAnimale");
                    if (previousValue != null)
                    {
                        this._AdozioneAnimale.Entity = null;
                        previousValue.Altro = null;
                    }
                    this._AdozioneAnimale.Entity = value;
                    if (value != null)
                    {
                        value.Altro = this;
                    }
                    this.SendPropertyChanged("AdozioneAnimale");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Gabbia in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Gabbia_Altro", Storage="_Gabbia", ThisKey="CodiceGabbia", OtherKey="CodiceGabbia", IsForeignKey=true)]
        public Gabbia Gabbia
        {
            get
            {
                return this._Gabbia.Entity;
            }
            set
            {
                Gabbia previousValue = this._Gabbia.Entity;
                if ((previousValue != value) || (this._Gabbia.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Gabbia");
                    if (previousValue != null)
                    {
                        this._Gabbia.Entity = null;
                        previousValue.Altros.Remove(this);
                    }
                    this._Gabbia.Entity = value;
                    if (value != null)
                    {
                        this._CodiceGabbia = value.CodiceGabbia;
                        value.Altros.Add(this);
                    }
                    else
                    {
                        this._CodiceGabbia = default(int);
                    }
                    this.SendPropertyChanged("Gabbia");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CartellaClinica in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_Altro", Storage="_CartellaClinica", ThisKey="CodiceCartella", OtherKey="CodiceCartella", IsForeignKey=true)]
        public CartellaClinica CartellaClinica
        {
            get
            {
                return this._CartellaClinica.Entity;
            }
            set
            {
                CartellaClinica previousValue = this._CartellaClinica.Entity;
                if ((previousValue != value) || (this._CartellaClinica.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("CartellaClinica");
                    if (previousValue != null)
                    {
                        this._CartellaClinica.Entity = null;
                        previousValue.Altros.Remove(this);
                    }
                    this._CartellaClinica.Entity = value;
                    if (value != null)
                    {
                        this._CodiceCartella = value.CodiceCartella;
                        value.Altros.Add(this);
                    }
                    else
                    {
                        this._CodiceCartella = default(int);
                    }
                    this.SendPropertyChanged("CartellaClinica");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Cane in the schema.
    /// </summary>
    [Table(Name = @"animali.cane")]
    public partial class Cane : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceCane;

        private int _CodiceCartella;

        private string _Razza;

        private string _CodiceFiscale;

        private System.DateTime _Data;
        #pragma warning restore 0649

        private EntityRef<Adozione> _Adozione;

        private EntityRef<Giorno> _Giorno;

        private EntityRef<CartellaClinica> _CartellaClinica;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceCaneChanging(int value);
        partial void OnCodiceCaneChanged();
        partial void OnCodiceCartellaChanging(int value);
        partial void OnCodiceCartellaChanged();
        partial void OnRazzaChanging(string value);
        partial void OnRazzaChanged();
        partial void OnCodiceFiscaleChanging(string value);
        partial void OnCodiceFiscaleChanged();
        partial void OnDataChanging(System.DateTime value);
        partial void OnDataChanged();
        #endregion

        public Cane()
        {
            this._Adozione  = default(EntityRef<Adozione>);
            this._Giorno  = default(EntityRef<Giorno>);
            this._CartellaClinica  = default(EntityRef<CartellaClinica>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceCane in the schema.
        /// </summary>
        [Column(Name = @"Codice_cane", Storage = "_CodiceCane", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceCane
        {
            get
            {
                return this._CodiceCane;
            }
            set
            {
                if (this._CodiceCane != value)
                {
                    if (this._Adozione.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceCaneChanging(value);
                    this.SendPropertyChanging("CodiceCane");
                    this._CodiceCane = value;
                    this.SendPropertyChanged("CodiceCane");
                    this.OnCodiceCaneChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceCartella in the schema.
        /// </summary>
        [Column(Name = @"Codice_cartella", Storage = "_CodiceCartella", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CodiceCartella
        {
            get
            {
                return this._CodiceCartella;
            }
            set
            {
                if (this._CodiceCartella != value)
                {
                    if (this._CartellaClinica.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceCartellaChanging(value);
                    this.SendPropertyChanging("CodiceCartella");
                    this._CodiceCartella = value;
                    this.SendPropertyChanged("CodiceCartella");
                    this.OnCodiceCartellaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Razza in the schema.
        /// </summary>
        [Column(Storage = "_Razza", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Razza
        {
            get
            {
                return this._Razza;
            }
            set
            {
                if (this._Razza != value)
                {
                    this.OnRazzaChanging(value);
                    this.SendPropertyChanging("Razza");
                    this._Razza = value;
                    this.SendPropertyChanged("Razza");
                    this.OnRazzaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceFiscale in the schema.
        /// </summary>
        [Column(Name = @"Codice_Fiscale", Storage = "_CodiceFiscale", CanBeNull = false, DbType = "CHAR(16) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CodiceFiscale
        {
            get
            {
                return this._CodiceFiscale;
            }
            set
            {
                if (this._CodiceFiscale != value)
                {
                    if (this._Giorno.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceFiscaleChanging(value);
                    this.SendPropertyChanging("CodiceFiscale");
                    this._CodiceFiscale = value;
                    this.SendPropertyChanged("CodiceFiscale");
                    this.OnCodiceFiscaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Data in the schema.
        /// </summary>
        [Column(Name = @"`data`", Storage = "_Data", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime Data
        {
            get
            {
                return this._Data;
            }
            set
            {
                if (this._Data != value)
                {
                    if (this._Giorno.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnDataChanging(value);
                    this.SendPropertyChanging("Data");
                    this._Data = value;
                    this.SendPropertyChanged("Data");
                    this.OnDataChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adozione in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Cane_Adozione", Storage="_Adozione", ThisKey="CodiceCane", OtherKey="CodiceCane", IsUnique=true, IsForeignKey=false, DeleteRule="NO ACTION")]
        public Adozione Adozione
        {
            get
            {
                return this._Adozione.Entity;
            }
            set
            {
                Adozione previousValue = this._Adozione.Entity;
                if ((previousValue != value) || (this._Adozione.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Adozione");
                    if (previousValue != null)
                    {
                        this._Adozione.Entity = null;
                        previousValue.Cane = null;
                    }
                    this._Adozione.Entity = value;
                    if (value != null)
                    {
                        value.Cane = this;
                    }
                    this.SendPropertyChanged("Adozione");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Giorno in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Giorno_Cane", Storage="_Giorno", ThisKey="CodiceFiscale,Data", OtherKey="CodiceFiscale,Data", IsForeignKey=true)]
        public Giorno Giorno
        {
            get
            {
                return this._Giorno.Entity;
            }
            set
            {
                Giorno previousValue = this._Giorno.Entity;
                if ((previousValue != value) || (this._Giorno.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Giorno");
                    if (previousValue != null)
                    {
                        this._Giorno.Entity = null;
                        previousValue.Canes.Remove(this);
                    }
                    this._Giorno.Entity = value;
                    if (value != null)
                    {
                        this._CodiceFiscale = value.CodiceFiscale;
                        this._Data = value.Data;
                        value.Canes.Add(this);
                    }
                    else
                    {
                        this._CodiceFiscale = default(string);
                        this._Data = default(System.DateTime);
                    }
                    this.SendPropertyChanged("Giorno");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CartellaClinica in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_Cane", Storage="_CartellaClinica", ThisKey="CodiceCartella", OtherKey="CodiceCartella", IsForeignKey=true)]
        public CartellaClinica CartellaClinica
        {
            get
            {
                return this._CartellaClinica.Entity;
            }
            set
            {
                CartellaClinica previousValue = this._CartellaClinica.Entity;
                if ((previousValue != value) || (this._CartellaClinica.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("CartellaClinica");
                    if (previousValue != null)
                    {
                        this._CartellaClinica.Entity = null;
                        previousValue.Canes.Remove(this);
                    }
                    this._CartellaClinica.Entity = value;
                    if (value != null)
                    {
                        this._CodiceCartella = value.CodiceCartella;
                        value.Canes.Add(this);
                    }
                    else
                    {
                        this._CodiceCartella = default(int);
                    }
                    this.SendPropertyChanged("CartellaClinica");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.CartellaClinica in the schema.
    /// </summary>
    [Table(Name = @"animali.cartella_clinica")]
    public partial class CartellaClinica : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceCartella;
        #pragma warning restore 0649

        private EntitySet<Altro> _Altros;

        private EntitySet<Cane> _Canes;

        private EntitySet<Esecuzione> _Esecuziones;

        private EntitySet<Intolleranza> _Intolleranzas;

        private EntitySet<VisitaMedica> _VisitaMedicas;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceCartellaChanging(int value);
        partial void OnCodiceCartellaChanged();
        #endregion

        public CartellaClinica()
        {
            this._Altros = new EntitySet<Altro>(new Action<Altro>(this.attach_Altros), new Action<Altro>(this.detach_Altros));
            this._Canes = new EntitySet<Cane>(new Action<Cane>(this.attach_Canes), new Action<Cane>(this.detach_Canes));
            this._Esecuziones = new EntitySet<Esecuzione>(new Action<Esecuzione>(this.attach_Esecuziones), new Action<Esecuzione>(this.detach_Esecuziones));
            this._Intolleranzas = new EntitySet<Intolleranza>(new Action<Intolleranza>(this.attach_Intolleranzas), new Action<Intolleranza>(this.detach_Intolleranzas));
            this._VisitaMedicas = new EntitySet<VisitaMedica>(new Action<VisitaMedica>(this.attach_VisitaMedicas), new Action<VisitaMedica>(this.detach_VisitaMedicas));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceCartella in the schema.
        /// </summary>
        [Column(Name = @"Codice_cartella", Storage = "_CodiceCartella", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceCartella
        {
            get
            {
                return this._CodiceCartella;
            }
            set
            {
                if (this._CodiceCartella != value)
                {
                    this.OnCodiceCartellaChanging(value);
                    this.SendPropertyChanging("CodiceCartella");
                    this._CodiceCartella = value;
                    this.SendPropertyChanged("CodiceCartella");
                    this.OnCodiceCartellaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Altros in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_Altro", Storage="_Altros", ThisKey="CodiceCartella", OtherKey="CodiceCartella", DeleteRule="NO ACTION")]
        public EntitySet<Altro> Altros
        {
            get
            {
                return this._Altros;
            }
            set
            {
                this._Altros.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Canes in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_Cane", Storage="_Canes", ThisKey="CodiceCartella", OtherKey="CodiceCartella", DeleteRule="NO ACTION")]
        public EntitySet<Cane> Canes
        {
            get
            {
                return this._Canes;
            }
            set
            {
                this._Canes.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Esecuziones in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_Esecuzione", Storage="_Esecuziones", ThisKey="CodiceCartella", OtherKey="CodiceCartella", DeleteRule="NO ACTION")]
        public EntitySet<Esecuzione> Esecuziones
        {
            get
            {
                return this._Esecuziones;
            }
            set
            {
                this._Esecuziones.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Intolleranzas in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_Intolleranza", Storage="_Intolleranzas", ThisKey="CodiceCartella", OtherKey="CodiceCartella", DeleteRule="NO ACTION")]
        public EntitySet<Intolleranza> Intolleranzas
        {
            get
            {
                return this._Intolleranzas;
            }
            set
            {
                this._Intolleranzas.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for VisitaMedicas in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_VisitaMedica", Storage="_VisitaMedicas", ThisKey="CodiceCartella", OtherKey="CodiceCartella", DeleteRule="NO ACTION")]
        public EntitySet<VisitaMedica> VisitaMedicas
        {
            get
            {
                return this._VisitaMedicas;
            }
            set
            {
                this._VisitaMedicas.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Altros(Altro entity)
        {
            this.SendPropertyChanging("Altros");
            entity.CartellaClinica = this;
        }
    
        private void detach_Altros(Altro entity)
        {
            this.SendPropertyChanging("Altros");
            entity.CartellaClinica = null;
        }

        private void attach_Canes(Cane entity)
        {
            this.SendPropertyChanging("Canes");
            entity.CartellaClinica = this;
        }
    
        private void detach_Canes(Cane entity)
        {
            this.SendPropertyChanging("Canes");
            entity.CartellaClinica = null;
        }

        private void attach_Esecuziones(Esecuzione entity)
        {
            this.SendPropertyChanging("Esecuziones");
            entity.CartellaClinica = this;
        }
    
        private void detach_Esecuziones(Esecuzione entity)
        {
            this.SendPropertyChanging("Esecuziones");
            entity.CartellaClinica = null;
        }

        private void attach_Intolleranzas(Intolleranza entity)
        {
            this.SendPropertyChanging("Intolleranzas");
            entity.CartellaClinica = this;
        }
    
        private void detach_Intolleranzas(Intolleranza entity)
        {
            this.SendPropertyChanging("Intolleranzas");
            entity.CartellaClinica = null;
        }

        private void attach_VisitaMedicas(VisitaMedica entity)
        {
            this.SendPropertyChanging("VisitaMedicas");
            entity.CartellaClinica = this;
        }
    
        private void detach_VisitaMedicas(VisitaMedica entity)
        {
            this.SendPropertyChanging("VisitaMedicas");
            entity.CartellaClinica = null;
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Esecuzione in the schema.
    /// </summary>
    [Table(Name = @"animali.esecuzione")]
    public partial class Esecuzione : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceCartella;

        private System.DateTime _DataSomministrazione;

        private int _CodiceVaccino;
        #pragma warning restore 0649

        private EntityRef<CartellaClinica> _CartellaClinica;

        private EntityRef<Vaccino> _Vaccino;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceCartellaChanging(int value);
        partial void OnCodiceCartellaChanged();
        partial void OnDataSomministrazioneChanging(System.DateTime value);
        partial void OnDataSomministrazioneChanged();
        partial void OnCodiceVaccinoChanging(int value);
        partial void OnCodiceVaccinoChanged();
        #endregion

        public Esecuzione()
        {
            this._CartellaClinica  = default(EntityRef<CartellaClinica>);
            this._Vaccino  = default(EntityRef<Vaccino>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceCartella in the schema.
        /// </summary>
        [Column(Name = @"Codice_cartella", Storage = "_CodiceCartella", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceCartella
        {
            get
            {
                return this._CodiceCartella;
            }
            set
            {
                if (this._CodiceCartella != value)
                {
                    if (this._CartellaClinica.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceCartellaChanging(value);
                    this.SendPropertyChanging("CodiceCartella");
                    this._CodiceCartella = value;
                    this.SendPropertyChanged("CodiceCartella");
                    this.OnCodiceCartellaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DataSomministrazione in the schema.
        /// </summary>
        [Column(Name = @"Data_somministrazione", Storage = "_DataSomministrazione", CanBeNull = false, DbType = "DATE NOT NULL", IsPrimaryKey = true)]
        public System.DateTime DataSomministrazione
        {
            get
            {
                return this._DataSomministrazione;
            }
            set
            {
                if (this._DataSomministrazione != value)
                {
                    this.OnDataSomministrazioneChanging(value);
                    this.SendPropertyChanging("DataSomministrazione");
                    this._DataSomministrazione = value;
                    this.SendPropertyChanged("DataSomministrazione");
                    this.OnDataSomministrazioneChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceVaccino in the schema.
        /// </summary>
        [Column(Name = @"Codice_vaccino", Storage = "_CodiceVaccino", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CodiceVaccino
        {
            get
            {
                return this._CodiceVaccino;
            }
            set
            {
                if (this._CodiceVaccino != value)
                {
                    if (this._Vaccino.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceVaccinoChanging(value);
                    this.SendPropertyChanging("CodiceVaccino");
                    this._CodiceVaccino = value;
                    this.SendPropertyChanged("CodiceVaccino");
                    this.OnCodiceVaccinoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CartellaClinica in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_Esecuzione", Storage="_CartellaClinica", ThisKey="CodiceCartella", OtherKey="CodiceCartella", IsForeignKey=true)]
        public CartellaClinica CartellaClinica
        {
            get
            {
                return this._CartellaClinica.Entity;
            }
            set
            {
                CartellaClinica previousValue = this._CartellaClinica.Entity;
                if ((previousValue != value) || (this._CartellaClinica.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("CartellaClinica");
                    if (previousValue != null)
                    {
                        this._CartellaClinica.Entity = null;
                        previousValue.Esecuziones.Remove(this);
                    }
                    this._CartellaClinica.Entity = value;
                    if (value != null)
                    {
                        this._CodiceCartella = value.CodiceCartella;
                        value.Esecuziones.Add(this);
                    }
                    else
                    {
                        this._CodiceCartella = default(int);
                    }
                    this.SendPropertyChanged("CartellaClinica");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Vaccino in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Vaccino_Esecuzione", Storage="_Vaccino", ThisKey="CodiceVaccino", OtherKey="CodiceVaccino", IsForeignKey=true)]
        public Vaccino Vaccino
        {
            get
            {
                return this._Vaccino.Entity;
            }
            set
            {
                Vaccino previousValue = this._Vaccino.Entity;
                if ((previousValue != value) || (this._Vaccino.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Vaccino");
                    if (previousValue != null)
                    {
                        this._Vaccino.Entity = null;
                        previousValue.Esecuziones.Remove(this);
                    }
                    this._Vaccino.Entity = value;
                    if (value != null)
                    {
                        this._CodiceVaccino = value.CodiceVaccino;
                        value.Esecuziones.Add(this);
                    }
                    else
                    {
                        this._CodiceVaccino = default(int);
                    }
                    this.SendPropertyChanged("Vaccino");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Gabbia in the schema.
    /// </summary>
    [Table(Name = @"animali.gabbia")]
    public partial class Gabbia : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceGabbia;

        private int _Lunghezza;

        private int _Larghezza;

        private string _CodiceFiscale;
        #pragma warning restore 0649

        private EntitySet<Altro> _Altros;

        private EntityRef<Persona> _Persona;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceGabbiaChanging(int value);
        partial void OnCodiceGabbiaChanged();
        partial void OnLunghezzaChanging(int value);
        partial void OnLunghezzaChanged();
        partial void OnLarghezzaChanging(int value);
        partial void OnLarghezzaChanged();
        partial void OnCodiceFiscaleChanging(string value);
        partial void OnCodiceFiscaleChanged();
        #endregion

        public Gabbia()
        {
            this._Altros = new EntitySet<Altro>(new Action<Altro>(this.attach_Altros), new Action<Altro>(this.detach_Altros));
            this._Persona  = default(EntityRef<Persona>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceGabbia in the schema.
        /// </summary>
        [Column(Name = @"codice_gabbia", Storage = "_CodiceGabbia", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceGabbia
        {
            get
            {
                return this._CodiceGabbia;
            }
            set
            {
                if (this._CodiceGabbia != value)
                {
                    this.OnCodiceGabbiaChanging(value);
                    this.SendPropertyChanging("CodiceGabbia");
                    this._CodiceGabbia = value;
                    this.SendPropertyChanged("CodiceGabbia");
                    this.OnCodiceGabbiaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Lunghezza in the schema.
        /// </summary>
        [Column(Name = @"lunghezza", Storage = "_Lunghezza", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Lunghezza
        {
            get
            {
                return this._Lunghezza;
            }
            set
            {
                if (this._Lunghezza != value)
                {
                    this.OnLunghezzaChanging(value);
                    this.SendPropertyChanging("Lunghezza");
                    this._Lunghezza = value;
                    this.SendPropertyChanged("Lunghezza");
                    this.OnLunghezzaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Larghezza in the schema.
        /// </summary>
        [Column(Name = @"larghezza", Storage = "_Larghezza", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int Larghezza
        {
            get
            {
                return this._Larghezza;
            }
            set
            {
                if (this._Larghezza != value)
                {
                    this.OnLarghezzaChanging(value);
                    this.SendPropertyChanging("Larghezza");
                    this._Larghezza = value;
                    this.SendPropertyChanged("Larghezza");
                    this.OnLarghezzaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceFiscale in the schema.
        /// </summary>
        [Column(Name = @"Codice_Fiscale", Storage = "_CodiceFiscale", CanBeNull = false, DbType = "CHAR(16) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string CodiceFiscale
        {
            get
            {
                return this._CodiceFiscale;
            }
            set
            {
                if (this._CodiceFiscale != value)
                {
                    if (this._Persona.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceFiscaleChanging(value);
                    this.SendPropertyChanging("CodiceFiscale");
                    this._CodiceFiscale = value;
                    this.SendPropertyChanged("CodiceFiscale");
                    this.OnCodiceFiscaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Altros in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Gabbia_Altro", Storage="_Altros", ThisKey="CodiceGabbia", OtherKey="CodiceGabbia", DeleteRule="NO ACTION")]
        public EntitySet<Altro> Altros
        {
            get
            {
                return this._Altros;
            }
            set
            {
                this._Altros.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Persona in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_Gabbia", Storage="_Persona", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
        public Persona Persona
        {
            get
            {
                return this._Persona.Entity;
            }
            set
            {
                Persona previousValue = this._Persona.Entity;
                if ((previousValue != value) || (this._Persona.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Persona");
                    if (previousValue != null)
                    {
                        this._Persona.Entity = null;
                        previousValue.Gabbias.Remove(this);
                    }
                    this._Persona.Entity = value;
                    if (value != null)
                    {
                        this._CodiceFiscale = value.CodiceFiscale;
                        value.Gabbias.Add(this);
                    }
                    else
                    {
                        this._CodiceFiscale = default(string);
                    }
                    this.SendPropertyChanged("Persona");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Altros(Altro entity)
        {
            this.SendPropertyChanging("Altros");
            entity.Gabbia = this;
        }
    
        private void detach_Altros(Altro entity)
        {
            this.SendPropertyChanging("Altros");
            entity.Gabbia = null;
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Giorno in the schema.
    /// </summary>
    [Table(Name = @"animali.giorno")]
    public partial class Giorno : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _CodiceFiscale;

        private System.DateTime _Data;
        #pragma warning restore 0649

        private EntitySet<Cane> _Canes;

        private EntityRef<Persona> _Persona;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceFiscaleChanging(string value);
        partial void OnCodiceFiscaleChanged();
        partial void OnDataChanging(System.DateTime value);
        partial void OnDataChanged();
        #endregion

        public Giorno()
        {
            this._Canes = new EntitySet<Cane>(new Action<Cane>(this.attach_Canes), new Action<Cane>(this.detach_Canes));
            this._Persona  = default(EntityRef<Persona>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceFiscale in the schema.
        /// </summary>
        [Column(Name = @"Codice_Fiscale", Storage = "_CodiceFiscale", CanBeNull = false, DbType = "CHAR(16) NOT NULL", IsPrimaryKey = true)]
        public string CodiceFiscale
        {
            get
            {
                return this._CodiceFiscale;
            }
            set
            {
                if (this._CodiceFiscale != value)
                {
                    if (this._Persona.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceFiscaleChanging(value);
                    this.SendPropertyChanging("CodiceFiscale");
                    this._CodiceFiscale = value;
                    this.SendPropertyChanged("CodiceFiscale");
                    this.OnCodiceFiscaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Data in the schema.
        /// </summary>
        [Column(Name = @"`data`", Storage = "_Data", CanBeNull = false, DbType = "DATE NOT NULL", IsPrimaryKey = true)]
        public System.DateTime Data
        {
            get
            {
                return this._Data;
            }
            set
            {
                if (this._Data != value)
                {
                    this.OnDataChanging(value);
                    this.SendPropertyChanging("Data");
                    this._Data = value;
                    this.SendPropertyChanged("Data");
                    this.OnDataChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Canes in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Giorno_Cane", Storage="_Canes", ThisKey="CodiceFiscale,Data", OtherKey="CodiceFiscale,Data", DeleteRule="NO ACTION")]
        public EntitySet<Cane> Canes
        {
            get
            {
                return this._Canes;
            }
            set
            {
                this._Canes.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Persona in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_Giorno", Storage="_Persona", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
        public Persona Persona
        {
            get
            {
                return this._Persona.Entity;
            }
            set
            {
                Persona previousValue = this._Persona.Entity;
                if ((previousValue != value) || (this._Persona.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Persona");
                    if (previousValue != null)
                    {
                        this._Persona.Entity = null;
                        previousValue.Giornos.Remove(this);
                    }
                    this._Persona.Entity = value;
                    if (value != null)
                    {
                        this._CodiceFiscale = value.CodiceFiscale;
                        value.Giornos.Add(this);
                    }
                    else
                    {
                        this._CodiceFiscale = default(string);
                    }
                    this.SendPropertyChanged("Persona");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Canes(Cane entity)
        {
            this.SendPropertyChanging("Canes");
            entity.Giorno = this;
        }
    
        private void detach_Canes(Cane entity)
        {
            this.SendPropertyChanging("Canes");
            entity.Giorno = null;
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Intolleranza in the schema.
    /// </summary>
    [Table(Name = @"animali.intolleranza")]
    public partial class Intolleranza : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceMedicinale;

        private int _CodiceCartella;

        private string _DescrizioneSintomi;
        #pragma warning restore 0649

        private EntityRef<CartellaClinica> _CartellaClinica;

        private EntityRef<Medicinale> _Medicinale;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceMedicinaleChanging(int value);
        partial void OnCodiceMedicinaleChanged();
        partial void OnCodiceCartellaChanging(int value);
        partial void OnCodiceCartellaChanged();
        partial void OnDescrizioneSintomiChanging(string value);
        partial void OnDescrizioneSintomiChanged();
        #endregion

        public Intolleranza()
        {
            this._CartellaClinica  = default(EntityRef<CartellaClinica>);
            this._Medicinale  = default(EntityRef<Medicinale>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceMedicinale in the schema.
        /// </summary>
        [Column(Name = @"Codice_medicinale", Storage = "_CodiceMedicinale", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceMedicinale
        {
            get
            {
                return this._CodiceMedicinale;
            }
            set
            {
                if (this._CodiceMedicinale != value)
                {
                    if (this._Medicinale.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceMedicinaleChanging(value);
                    this.SendPropertyChanging("CodiceMedicinale");
                    this._CodiceMedicinale = value;
                    this.SendPropertyChanged("CodiceMedicinale");
                    this.OnCodiceMedicinaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceCartella in the schema.
        /// </summary>
        [Column(Name = @"Codice_cartella", Storage = "_CodiceCartella", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceCartella
        {
            get
            {
                return this._CodiceCartella;
            }
            set
            {
                if (this._CodiceCartella != value)
                {
                    if (this._CartellaClinica.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceCartellaChanging(value);
                    this.SendPropertyChanging("CodiceCartella");
                    this._CodiceCartella = value;
                    this.SendPropertyChanged("CodiceCartella");
                    this.OnCodiceCartellaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DescrizioneSintomi in the schema.
        /// </summary>
        [Column(Name = @"Descrizione_sintomi", Storage = "_DescrizioneSintomi", CanBeNull = false, DbType = "CHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DescrizioneSintomi
        {
            get
            {
                return this._DescrizioneSintomi;
            }
            set
            {
                if (this._DescrizioneSintomi != value)
                {
                    this.OnDescrizioneSintomiChanging(value);
                    this.SendPropertyChanging("DescrizioneSintomi");
                    this._DescrizioneSintomi = value;
                    this.SendPropertyChanged("DescrizioneSintomi");
                    this.OnDescrizioneSintomiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CartellaClinica in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_Intolleranza", Storage="_CartellaClinica", ThisKey="CodiceCartella", OtherKey="CodiceCartella", IsForeignKey=true)]
        public CartellaClinica CartellaClinica
        {
            get
            {
                return this._CartellaClinica.Entity;
            }
            set
            {
                CartellaClinica previousValue = this._CartellaClinica.Entity;
                if ((previousValue != value) || (this._CartellaClinica.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("CartellaClinica");
                    if (previousValue != null)
                    {
                        this._CartellaClinica.Entity = null;
                        previousValue.Intolleranzas.Remove(this);
                    }
                    this._CartellaClinica.Entity = value;
                    if (value != null)
                    {
                        this._CodiceCartella = value.CodiceCartella;
                        value.Intolleranzas.Add(this);
                    }
                    else
                    {
                        this._CodiceCartella = default(int);
                    }
                    this.SendPropertyChanged("CartellaClinica");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Medicinale in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Medicinale_Intolleranza", Storage="_Medicinale", ThisKey="CodiceMedicinale", OtherKey="CodiceMedicinale", IsForeignKey=true)]
        public Medicinale Medicinale
        {
            get
            {
                return this._Medicinale.Entity;
            }
            set
            {
                Medicinale previousValue = this._Medicinale.Entity;
                if ((previousValue != value) || (this._Medicinale.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Medicinale");
                    if (previousValue != null)
                    {
                        this._Medicinale.Entity = null;
                        previousValue.Intolleranzas.Remove(this);
                    }
                    this._Medicinale.Entity = value;
                    if (value != null)
                    {
                        this._CodiceMedicinale = value.CodiceMedicinale;
                        value.Intolleranzas.Add(this);
                    }
                    else
                    {
                        this._CodiceMedicinale = default(int);
                    }
                    this.SendPropertyChanged("Medicinale");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Medicinale in the schema.
    /// </summary>
    [Table(Name = @"animali.medicinale")]
    public partial class Medicinale : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceMedicinale;

        private string _DescrizioneUso;
        #pragma warning restore 0649

        private EntitySet<Intolleranza> _Intolleranzas;

        private EntitySet<VisitaMedica> _VisitaMedicas;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceMedicinaleChanging(int value);
        partial void OnCodiceMedicinaleChanged();
        partial void OnDescrizioneUsoChanging(string value);
        partial void OnDescrizioneUsoChanged();
        #endregion

        public Medicinale()
        {
            this._Intolleranzas = new EntitySet<Intolleranza>(new Action<Intolleranza>(this.attach_Intolleranzas), new Action<Intolleranza>(this.detach_Intolleranzas));
            this._VisitaMedicas = new EntitySet<VisitaMedica>(new Action<VisitaMedica>(this.attach_VisitaMedicas), new Action<VisitaMedica>(this.detach_VisitaMedicas));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceMedicinale in the schema.
        /// </summary>
        [Column(Name = @"Codice_medicinale", Storage = "_CodiceMedicinale", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceMedicinale
        {
            get
            {
                return this._CodiceMedicinale;
            }
            set
            {
                if (this._CodiceMedicinale != value)
                {
                    this.OnCodiceMedicinaleChanging(value);
                    this.SendPropertyChanging("CodiceMedicinale");
                    this._CodiceMedicinale = value;
                    this.SendPropertyChanged("CodiceMedicinale");
                    this.OnCodiceMedicinaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DescrizioneUso in the schema.
        /// </summary>
        [Column(Name = @"Descrizione_uso", Storage = "_DescrizioneUso", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DescrizioneUso
        {
            get
            {
                return this._DescrizioneUso;
            }
            set
            {
                if (this._DescrizioneUso != value)
                {
                    this.OnDescrizioneUsoChanging(value);
                    this.SendPropertyChanging("DescrizioneUso");
                    this._DescrizioneUso = value;
                    this.SendPropertyChanged("DescrizioneUso");
                    this.OnDescrizioneUsoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Intolleranzas in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Medicinale_Intolleranza", Storage="_Intolleranzas", ThisKey="CodiceMedicinale", OtherKey="CodiceMedicinale", DeleteRule="NO ACTION")]
        public EntitySet<Intolleranza> Intolleranzas
        {
            get
            {
                return this._Intolleranzas;
            }
            set
            {
                this._Intolleranzas.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for VisitaMedicas in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Medicinale_VisitaMedica", Storage="_VisitaMedicas", ThisKey="CodiceMedicinale", OtherKey="CodiceFiscale,CodiceVisita,DataVisita", LinkTableName=@"animali.prescrizione", LinkThisKey=@"Codice_medicinale", LinkOtherKey=@"Codice_Fiscale,Codice_visita,Data_visita")]
        public EntitySet<VisitaMedica> VisitaMedicas
        {
            get
            {
                return this._VisitaMedicas;
            }
            set
            {
                this._VisitaMedicas.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Intolleranzas(Intolleranza entity)
        {
            this.SendPropertyChanging("Intolleranzas");
            entity.Medicinale = this;
        }
    
        private void detach_Intolleranzas(Intolleranza entity)
        {
            this.SendPropertyChanging("Intolleranzas");
            entity.Medicinale = null;
        }

        private void attach_VisitaMedicas(VisitaMedica entity)
        {
            this.SendPropertyChanging("VisitaMedicas");
            entity.Medicinales.Add(this);
        }
    
        private void detach_VisitaMedicas(VisitaMedica entity)
        {
            this.SendPropertyChanging("VisitaMedicas");
            entity.Medicinales.Remove(this);
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Persona in the schema.
    /// </summary>
    [Table(Name = @"animali.persona")]
    public partial class Persona : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _CodiceFiscale;

        private string _Nome;

        private string _Cognome;

        private string _Telefono;

        private string _Dipendente;

        private string _Famiglia;

        private string _Veterinario;

        private string _Indirizzo;

        private int? _NumeroVisite;
        #pragma warning restore 0649

        private EntitySet<Adozione> _Adoziones;

        private EntitySet<AdozioneAnimale> _AdozioneAnimales;

        private EntitySet<Gabbia> _Gabbias;

        private EntitySet<Giorno> _Giornos;

        private EntitySet<TurnoDiLavoro> _TurnoDiLavoros;

        private EntitySet<VisitaMedica> _VisitaMedicas;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceFiscaleChanging(string value);
        partial void OnCodiceFiscaleChanged();
        partial void OnNomeChanging(string value);
        partial void OnNomeChanged();
        partial void OnCognomeChanging(string value);
        partial void OnCognomeChanged();
        partial void OnTelefonoChanging(string value);
        partial void OnTelefonoChanged();
        partial void OnDipendenteChanging(string value);
        partial void OnDipendenteChanged();
        partial void OnFamigliaChanging(string value);
        partial void OnFamigliaChanged();
        partial void OnVeterinarioChanging(string value);
        partial void OnVeterinarioChanged();
        partial void OnIndirizzoChanging(string value);
        partial void OnIndirizzoChanged();
        partial void OnNumeroVisiteChanging(int? value);
        partial void OnNumeroVisiteChanged();
        #endregion

        public Persona()
        {
            this._Adoziones = new EntitySet<Adozione>(new Action<Adozione>(this.attach_Adoziones), new Action<Adozione>(this.detach_Adoziones));
            this._AdozioneAnimales = new EntitySet<AdozioneAnimale>(new Action<AdozioneAnimale>(this.attach_AdozioneAnimales), new Action<AdozioneAnimale>(this.detach_AdozioneAnimales));
            this._Gabbias = new EntitySet<Gabbia>(new Action<Gabbia>(this.attach_Gabbias), new Action<Gabbia>(this.detach_Gabbias));
            this._Giornos = new EntitySet<Giorno>(new Action<Giorno>(this.attach_Giornos), new Action<Giorno>(this.detach_Giornos));
            this._TurnoDiLavoros = new EntitySet<TurnoDiLavoro>(new Action<TurnoDiLavoro>(this.attach_TurnoDiLavoros), new Action<TurnoDiLavoro>(this.detach_TurnoDiLavoros));
            this._VisitaMedicas = new EntitySet<VisitaMedica>(new Action<VisitaMedica>(this.attach_VisitaMedicas), new Action<VisitaMedica>(this.detach_VisitaMedicas));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceFiscale in the schema.
        /// </summary>
        [Column(Name = @"Codice_Fiscale", Storage = "_CodiceFiscale", CanBeNull = false, DbType = "CHAR(16) NOT NULL", IsPrimaryKey = true)]
        public string CodiceFiscale
        {
            get
            {
                return this._CodiceFiscale;
            }
            set
            {
                if (this._CodiceFiscale != value)
                {
                    this.OnCodiceFiscaleChanging(value);
                    this.SendPropertyChanging("CodiceFiscale");
                    this._CodiceFiscale = value;
                    this.SendPropertyChanged("CodiceFiscale");
                    this.OnCodiceFiscaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Nome in the schema.
        /// </summary>
        [Column(Storage = "_Nome", CanBeNull = false, DbType = "VARCHAR(30) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Nome
        {
            get
            {
                return this._Nome;
            }
            set
            {
                if (this._Nome != value)
                {
                    this.OnNomeChanging(value);
                    this.SendPropertyChanging("Nome");
                    this._Nome = value;
                    this.SendPropertyChanged("Nome");
                    this.OnNomeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Cognome in the schema.
        /// </summary>
        [Column(Storage = "_Cognome", CanBeNull = false, DbType = "VARCHAR(30) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Cognome
        {
            get
            {
                return this._Cognome;
            }
            set
            {
                if (this._Cognome != value)
                {
                    this.OnCognomeChanging(value);
                    this.SendPropertyChanging("Cognome");
                    this._Cognome = value;
                    this.SendPropertyChanged("Cognome");
                    this.OnCognomeChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Telefono in the schema.
        /// </summary>
        [Column(Storage = "_Telefono", CanBeNull = false, DbType = "CHAR(10) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Telefono
        {
            get
            {
                return this._Telefono;
            }
            set
            {
                if (this._Telefono != value)
                {
                    this.OnTelefonoChanging(value);
                    this.SendPropertyChanging("Telefono");
                    this._Telefono = value;
                    this.SendPropertyChanged("Telefono");
                    this.OnTelefonoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Dipendente in the schema.
        /// </summary>
        [Column(Storage = "_Dipendente", DbType = "CHAR(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Dipendente
        {
            get
            {
                return this._Dipendente;
            }
            set
            {
                if (this._Dipendente != value)
                {
                    this.OnDipendenteChanging(value);
                    this.SendPropertyChanging("Dipendente");
                    this._Dipendente = value;
                    this.SendPropertyChanged("Dipendente");
                    this.OnDipendenteChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Famiglia in the schema.
        /// </summary>
        [Column(Storage = "_Famiglia", DbType = "CHAR(1) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Famiglia
        {
            get
            {
                return this._Famiglia;
            }
            set
            {
                if (this._Famiglia != value)
                {
                    this.OnFamigliaChanging(value);
                    this.SendPropertyChanging("Famiglia");
                    this._Famiglia = value;
                    this.SendPropertyChanged("Famiglia");
                    this.OnFamigliaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Veterinario in the schema.
        /// </summary>
        [Column(Storage = "_Veterinario", DbType = "CHAR(6) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Veterinario
        {
            get
            {
                return this._Veterinario;
            }
            set
            {
                if (this._Veterinario != value)
                {
                    this.OnVeterinarioChanging(value);
                    this.SendPropertyChanging("Veterinario");
                    this._Veterinario = value;
                    this.SendPropertyChanged("Veterinario");
                    this.OnVeterinarioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Indirizzo in the schema.
        /// </summary>
        [Column(Storage = "_Indirizzo", DbType = "VARCHAR(50) NULL", UpdateCheck = UpdateCheck.Never)]
        public string Indirizzo
        {
            get
            {
                return this._Indirizzo;
            }
            set
            {
                if (this._Indirizzo != value)
                {
                    this.OnIndirizzoChanging(value);
                    this.SendPropertyChanging("Indirizzo");
                    this._Indirizzo = value;
                    this.SendPropertyChanged("Indirizzo");
                    this.OnIndirizzoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for NumeroVisite in the schema.
        /// </summary>
        [Column(Name = @"Numero_visite", Storage = "_NumeroVisite", DbType = "INT NULL", UpdateCheck = UpdateCheck.Never)]
        public int? NumeroVisite
        {
            get
            {
                return this._NumeroVisite;
            }
            set
            {
                if (this._NumeroVisite != value)
                {
                    this.OnNumeroVisiteChanging(value);
                    this.SendPropertyChanging("NumeroVisite");
                    this._NumeroVisite = value;
                    this.SendPropertyChanged("NumeroVisite");
                    this.OnNumeroVisiteChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Adoziones in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_Adozione", Storage="_Adoziones", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", DeleteRule="NO ACTION")]
        public EntitySet<Adozione> Adoziones
        {
            get
            {
                return this._Adoziones;
            }
            set
            {
                this._Adoziones.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for AdozioneAnimales in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_AdozioneAnimale", Storage="_AdozioneAnimales", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", DeleteRule="NO ACTION")]
        public EntitySet<AdozioneAnimale> AdozioneAnimales
        {
            get
            {
                return this._AdozioneAnimales;
            }
            set
            {
                this._AdozioneAnimales.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Gabbias in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_Gabbia", Storage="_Gabbias", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", DeleteRule="NO ACTION")]
        public EntitySet<Gabbia> Gabbias
        {
            get
            {
                return this._Gabbias;
            }
            set
            {
                this._Gabbias.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for Giornos in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_Giorno", Storage="_Giornos", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", DeleteRule="NO ACTION")]
        public EntitySet<Giorno> Giornos
        {
            get
            {
                return this._Giornos;
            }
            set
            {
                this._Giornos.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for TurnoDiLavoros in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_TurnoDiLavoro", Storage="_TurnoDiLavoros", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", DeleteRule="NO ACTION")]
        public EntitySet<TurnoDiLavoro> TurnoDiLavoros
        {
            get
            {
                return this._TurnoDiLavoros;
            }
            set
            {
                this._TurnoDiLavoros.Assign(value);
            }
        }

    
        /// <summary>
        /// There are no comments for VisitaMedicas in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_VisitaMedica", Storage="_VisitaMedicas", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", DeleteRule="NO ACTION")]
        public EntitySet<VisitaMedica> VisitaMedicas
        {
            get
            {
                return this._VisitaMedicas;
            }
            set
            {
                this._VisitaMedicas.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Adoziones(Adozione entity)
        {
            this.SendPropertyChanging("Adoziones");
            entity.Persona = this;
        }
    
        private void detach_Adoziones(Adozione entity)
        {
            this.SendPropertyChanging("Adoziones");
            entity.Persona = null;
        }

        private void attach_AdozioneAnimales(AdozioneAnimale entity)
        {
            this.SendPropertyChanging("AdozioneAnimales");
            entity.Persona = this;
        }
    
        private void detach_AdozioneAnimales(AdozioneAnimale entity)
        {
            this.SendPropertyChanging("AdozioneAnimales");
            entity.Persona = null;
        }

        private void attach_Gabbias(Gabbia entity)
        {
            this.SendPropertyChanging("Gabbias");
            entity.Persona = this;
        }
    
        private void detach_Gabbias(Gabbia entity)
        {
            this.SendPropertyChanging("Gabbias");
            entity.Persona = null;
        }

        private void attach_Giornos(Giorno entity)
        {
            this.SendPropertyChanging("Giornos");
            entity.Persona = this;
        }
    
        private void detach_Giornos(Giorno entity)
        {
            this.SendPropertyChanging("Giornos");
            entity.Persona = null;
        }

        private void attach_TurnoDiLavoros(TurnoDiLavoro entity)
        {
            this.SendPropertyChanging("TurnoDiLavoros");
            entity.Persona = this;
        }
    
        private void detach_TurnoDiLavoros(TurnoDiLavoro entity)
        {
            this.SendPropertyChanging("TurnoDiLavoros");
            entity.Persona = null;
        }

        private void attach_VisitaMedicas(VisitaMedica entity)
        {
            this.SendPropertyChanging("VisitaMedicas");
            entity.Persona = this;
        }
    
        private void detach_VisitaMedicas(VisitaMedica entity)
        {
            this.SendPropertyChanging("VisitaMedicas");
            entity.Persona = null;
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.TurnoDiLavoro in the schema.
    /// </summary>
    [Table(Name = @"animali.turno_di_lavoro")]
    public partial class TurnoDiLavoro : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _CodiceFiscale;

        private System.DateTime _OraInizio;

        private System.DateTime _OraFine;

        private string _Mese;

        private string _Anno;
        #pragma warning restore 0649

        private EntityRef<Persona> _Persona;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceFiscaleChanging(string value);
        partial void OnCodiceFiscaleChanged();
        partial void OnOraInizioChanging(System.DateTime value);
        partial void OnOraInizioChanged();
        partial void OnOraFineChanging(System.DateTime value);
        partial void OnOraFineChanged();
        partial void OnMeseChanging(string value);
        partial void OnMeseChanged();
        partial void OnAnnoChanging(string value);
        partial void OnAnnoChanged();
        #endregion

        public TurnoDiLavoro()
        {
            this._Persona  = default(EntityRef<Persona>);
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceFiscale in the schema.
        /// </summary>
        [Column(Name = @"Codice_Fiscale", Storage = "_CodiceFiscale", CanBeNull = false, DbType = "CHAR(16) NOT NULL", IsPrimaryKey = true)]
        public string CodiceFiscale
        {
            get
            {
                return this._CodiceFiscale;
            }
            set
            {
                if (this._CodiceFiscale != value)
                {
                    if (this._Persona.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceFiscaleChanging(value);
                    this.SendPropertyChanging("CodiceFiscale");
                    this._CodiceFiscale = value;
                    this.SendPropertyChanged("CodiceFiscale");
                    this.OnCodiceFiscaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OraInizio in the schema.
        /// </summary>
        [Column(Name = @"Ora_inizio", Storage = "_OraInizio", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime OraInizio
        {
            get
            {
                return this._OraInizio;
            }
            set
            {
                if (this._OraInizio != value)
                {
                    this.OnOraInizioChanging(value);
                    this.SendPropertyChanging("OraInizio");
                    this._OraInizio = value;
                    this.SendPropertyChanged("OraInizio");
                    this.OnOraInizioChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for OraFine in the schema.
        /// </summary>
        [Column(Name = @"Ora_fine", Storage = "_OraFine", CanBeNull = false, DbType = "DATE NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public System.DateTime OraFine
        {
            get
            {
                return this._OraFine;
            }
            set
            {
                if (this._OraFine != value)
                {
                    this.OnOraFineChanging(value);
                    this.SendPropertyChanging("OraFine");
                    this._OraFine = value;
                    this.SendPropertyChanged("OraFine");
                    this.OnOraFineChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Mese in the schema.
        /// </summary>
        [Column(Name = @"mese", Storage = "_Mese", CanBeNull = false, DbType = "CHAR(1) NOT NULL", IsPrimaryKey = true)]
        public string Mese
        {
            get
            {
                return this._Mese;
            }
            set
            {
                if (this._Mese != value)
                {
                    this.OnMeseChanging(value);
                    this.SendPropertyChanging("Mese");
                    this._Mese = value;
                    this.SendPropertyChanged("Mese");
                    this.OnMeseChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Anno in the schema.
        /// </summary>
        [Column(Name = @"anno", Storage = "_Anno", CanBeNull = false, DbType = "CHAR(1) NOT NULL", IsPrimaryKey = true)]
        public string Anno
        {
            get
            {
                return this._Anno;
            }
            set
            {
                if (this._Anno != value)
                {
                    this.OnAnnoChanging(value);
                    this.SendPropertyChanging("Anno");
                    this._Anno = value;
                    this.SendPropertyChanged("Anno");
                    this.OnAnnoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Persona in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_TurnoDiLavoro", Storage="_Persona", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
        public Persona Persona
        {
            get
            {
                return this._Persona.Entity;
            }
            set
            {
                Persona previousValue = this._Persona.Entity;
                if ((previousValue != value) || (this._Persona.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Persona");
                    if (previousValue != null)
                    {
                        this._Persona.Entity = null;
                        previousValue.TurnoDiLavoros.Remove(this);
                    }
                    this._Persona.Entity = value;
                    if (value != null)
                    {
                        this._CodiceFiscale = value.CodiceFiscale;
                        value.TurnoDiLavoros.Add(this);
                    }
                    else
                    {
                        this._CodiceFiscale = default(string);
                    }
                    this.SendPropertyChanged("Persona");
                }
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.Vaccino in the schema.
    /// </summary>
    [Table(Name = @"animali.vaccino")]
    public partial class Vaccino : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private int _CodiceVaccino;

        private string _Descrizione;
        #pragma warning restore 0649

        private EntitySet<Esecuzione> _Esecuziones;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceVaccinoChanging(int value);
        partial void OnCodiceVaccinoChanged();
        partial void OnDescrizioneChanging(string value);
        partial void OnDescrizioneChanged();
        #endregion

        public Vaccino()
        {
            this._Esecuziones = new EntitySet<Esecuzione>(new Action<Esecuzione>(this.attach_Esecuziones), new Action<Esecuzione>(this.detach_Esecuziones));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceVaccino in the schema.
        /// </summary>
        [Column(Name = @"Codice_vaccino", Storage = "_CodiceVaccino", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceVaccino
        {
            get
            {
                return this._CodiceVaccino;
            }
            set
            {
                if (this._CodiceVaccino != value)
                {
                    this.OnCodiceVaccinoChanging(value);
                    this.SendPropertyChanging("CodiceVaccino");
                    this._CodiceVaccino = value;
                    this.SendPropertyChanged("CodiceVaccino");
                    this.OnCodiceVaccinoChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Descrizione in the schema.
        /// </summary>
        [Column(Storage = "_Descrizione", CanBeNull = false, DbType = "VARCHAR(50) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string Descrizione
        {
            get
            {
                return this._Descrizione;
            }
            set
            {
                if (this._Descrizione != value)
                {
                    this.OnDescrizioneChanging(value);
                    this.SendPropertyChanging("Descrizione");
                    this._Descrizione = value;
                    this.SendPropertyChanged("Descrizione");
                    this.OnDescrizioneChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Esecuziones in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Vaccino_Esecuzione", Storage="_Esecuziones", ThisKey="CodiceVaccino", OtherKey="CodiceVaccino", DeleteRule="NO ACTION")]
        public EntitySet<Esecuzione> Esecuziones
        {
            get
            {
                return this._Esecuziones;
            }
            set
            {
                this._Esecuziones.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Esecuziones(Esecuzione entity)
        {
            this.SendPropertyChanging("Esecuziones");
            entity.Vaccino = this;
        }
    
        private void detach_Esecuziones(Esecuzione entity)
        {
            this.SendPropertyChanging("Esecuziones");
            entity.Vaccino = null;
        }
    }

    /// <summary>
    /// There are no comments for AnimaliContext.VisitaMedica in the schema.
    /// </summary>
    [Table(Name = @"animali.visita_medica")]
    public partial class VisitaMedica : INotifyPropertyChanging, INotifyPropertyChanged
    {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);
        #pragma warning disable 0649

        private string _CodiceFiscale;

        private int _CodiceVisita;

        private string _DescrizioneSintomi;

        private System.DateTime _DataVisita;

        private int _CodiceCartella;
        #pragma warning restore 0649

        private EntityRef<CartellaClinica> _CartellaClinica;

        private EntityRef<Persona> _Persona;

        private EntitySet<Medicinale> _Medicinales;

        #region Extensibility Method Definitions

        partial void OnLoaded();
        partial void OnValidate(ChangeAction action);
        partial void OnCreated();
        partial void OnCodiceFiscaleChanging(string value);
        partial void OnCodiceFiscaleChanged();
        partial void OnCodiceVisitaChanging(int value);
        partial void OnCodiceVisitaChanged();
        partial void OnDescrizioneSintomiChanging(string value);
        partial void OnDescrizioneSintomiChanged();
        partial void OnDataVisitaChanging(System.DateTime value);
        partial void OnDataVisitaChanged();
        partial void OnCodiceCartellaChanging(int value);
        partial void OnCodiceCartellaChanged();
        #endregion

        public VisitaMedica()
        {
            this._CartellaClinica  = default(EntityRef<CartellaClinica>);
            this._Persona  = default(EntityRef<Persona>);
            this._Medicinales = new EntitySet<Medicinale>(new Action<Medicinale>(this.attach_Medicinales), new Action<Medicinale>(this.detach_Medicinales));
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for CodiceFiscale in the schema.
        /// </summary>
        [Column(Name = @"Codice_Fiscale", Storage = "_CodiceFiscale", CanBeNull = false, DbType = "CHAR(16) NOT NULL", IsPrimaryKey = true)]
        public string CodiceFiscale
        {
            get
            {
                return this._CodiceFiscale;
            }
            set
            {
                if (this._CodiceFiscale != value)
                {
                    if (this._Persona.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceFiscaleChanging(value);
                    this.SendPropertyChanging("CodiceFiscale");
                    this._CodiceFiscale = value;
                    this.SendPropertyChanged("CodiceFiscale");
                    this.OnCodiceFiscaleChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceVisita in the schema.
        /// </summary>
        [Column(Name = @"Codice_visita", Storage = "_CodiceVisita", CanBeNull = false, DbType = "INT NOT NULL", IsPrimaryKey = true)]
        public int CodiceVisita
        {
            get
            {
                return this._CodiceVisita;
            }
            set
            {
                if (this._CodiceVisita != value)
                {
                    this.OnCodiceVisitaChanging(value);
                    this.SendPropertyChanging("CodiceVisita");
                    this._CodiceVisita = value;
                    this.SendPropertyChanged("CodiceVisita");
                    this.OnCodiceVisitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DescrizioneSintomi in the schema.
        /// </summary>
        [Column(Name = @"Descrizione_sintomi", Storage = "_DescrizioneSintomi", CanBeNull = false, DbType = "VARCHAR(100) NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public string DescrizioneSintomi
        {
            get
            {
                return this._DescrizioneSintomi;
            }
            set
            {
                if (this._DescrizioneSintomi != value)
                {
                    this.OnDescrizioneSintomiChanging(value);
                    this.SendPropertyChanging("DescrizioneSintomi");
                    this._DescrizioneSintomi = value;
                    this.SendPropertyChanged("DescrizioneSintomi");
                    this.OnDescrizioneSintomiChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for DataVisita in the schema.
        /// </summary>
        [Column(Name = @"Data_visita", Storage = "_DataVisita", CanBeNull = false, DbType = "DATE NOT NULL", IsPrimaryKey = true)]
        public System.DateTime DataVisita
        {
            get
            {
                return this._DataVisita;
            }
            set
            {
                if (this._DataVisita != value)
                {
                    this.OnDataVisitaChanging(value);
                    this.SendPropertyChanging("DataVisita");
                    this._DataVisita = value;
                    this.SendPropertyChanged("DataVisita");
                    this.OnDataVisitaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CodiceCartella in the schema.
        /// </summary>
        [Column(Name = @"Codice_cartella", Storage = "_CodiceCartella", CanBeNull = false, DbType = "INT NOT NULL", UpdateCheck = UpdateCheck.Never)]
        public int CodiceCartella
        {
            get
            {
                return this._CodiceCartella;
            }
            set
            {
                if (this._CodiceCartella != value)
                {
                    if (this._CartellaClinica.HasLoadedOrAssignedValue)
                    {
                        throw new ForeignKeyReferenceAlreadyHasValueException();
                    }

                    this.OnCodiceCartellaChanging(value);
                    this.SendPropertyChanging("CodiceCartella");
                    this._CodiceCartella = value;
                    this.SendPropertyChanged("CodiceCartella");
                    this.OnCodiceCartellaChanged();
                }
            }
        }

    
        /// <summary>
        /// There are no comments for CartellaClinica in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="CartellaClinica_VisitaMedica", Storage="_CartellaClinica", ThisKey="CodiceCartella", OtherKey="CodiceCartella", IsForeignKey=true)]
        public CartellaClinica CartellaClinica
        {
            get
            {
                return this._CartellaClinica.Entity;
            }
            set
            {
                CartellaClinica previousValue = this._CartellaClinica.Entity;
                if ((previousValue != value) || (this._CartellaClinica.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("CartellaClinica");
                    if (previousValue != null)
                    {
                        this._CartellaClinica.Entity = null;
                        previousValue.VisitaMedicas.Remove(this);
                    }
                    this._CartellaClinica.Entity = value;
                    if (value != null)
                    {
                        this._CodiceCartella = value.CodiceCartella;
                        value.VisitaMedicas.Add(this);
                    }
                    else
                    {
                        this._CodiceCartella = default(int);
                    }
                    this.SendPropertyChanged("CartellaClinica");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Persona in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Persona_VisitaMedica", Storage="_Persona", ThisKey="CodiceFiscale", OtherKey="CodiceFiscale", IsForeignKey=true)]
        public Persona Persona
        {
            get
            {
                return this._Persona.Entity;
            }
            set
            {
                Persona previousValue = this._Persona.Entity;
                if ((previousValue != value) || (this._Persona.HasLoadedOrAssignedValue == false))
                {
                    this.SendPropertyChanging("Persona");
                    if (previousValue != null)
                    {
                        this._Persona.Entity = null;
                        previousValue.VisitaMedicas.Remove(this);
                    }
                    this._Persona.Entity = value;
                    if (value != null)
                    {
                        this._CodiceFiscale = value.CodiceFiscale;
                        value.VisitaMedicas.Add(this);
                    }
                    else
                    {
                        this._CodiceFiscale = default(string);
                    }
                    this.SendPropertyChanged("Persona");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for Medicinales in the schema.
        /// </summary>
        [Devart.Data.Linq.Mapping.Association(Name="Medicinale_VisitaMedica", Storage="_Medicinales", ThisKey="CodiceFiscale,CodiceVisita,DataVisita", OtherKey="CodiceMedicinale", LinkTableName=@"animali.prescrizione", LinkThisKey=@"Codice_Fiscale,Codice_visita,Data_visita", LinkOtherKey=@"Codice_medicinale")]
        public EntitySet<Medicinale> Medicinales
        {
            get
            {
                return this._Medicinales;
            }
            set
            {
                this._Medicinales.Assign(value);
            }
        }
   
        public event PropertyChangingEventHandler PropertyChanging;

        public event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {
            var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {
            var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }

        private void attach_Medicinales(Medicinale entity)
        {
            this.SendPropertyChanging("Medicinales");
            entity.VisitaMedicas.Add(this);
        }
    
        private void detach_Medicinales(Medicinale entity)
        {
            this.SendPropertyChanging("Medicinales");
            entity.VisitaMedicas.Remove(this);
        }
    }

}
