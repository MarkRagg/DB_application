<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="animaliDataSet" targetNamespace="http://tempuri.org/animaliDataSet.xsd" xmlns:mstns="http://tempuri.org/animaliDataSet.xsd" xmlns="http://tempuri.org/animaliDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="animaliConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="animaliConnectionString (Settings)" PropertyReference="ApplicationSettings.DB_application.Properties.Settings.GlobalReference.Default.animaliConnectionString" Provider="Devart.Data.MySql" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="altroTableAdapter" GeneratorDataComponentClassName="altroTableAdapter" Name="altro" UserDataComponentName="altroTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="animaliConnectionString (Settings)" DbObjectName="animali.altro" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `animali`.`altro` WHERE ((`Codice_animale` = :Original_Codice_animale) AND (`Codice_cartella` = :Original_Codice_cartella) AND (`Tipo_animale` = :Original_Tipo_animale) AND (`codice_gabbia` = :Original_codice_gabbia))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_Codice_animale" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Codice_animale" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_Codice_cartella" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Codice_cartella" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_Tipo_animale" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Tipo_animale" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_codice_gabbia" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="codice_gabbia" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `animali`.`altro` (`Codice_animale`, `Codice_cartella`, `Tipo_animale`, `codice_gabbia`) VALUES (:Codice_animale, :Codice_cartella, :Tipo_animale, :codice_gabbia)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Codice_animale" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Codice_animale" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Codice_cartella" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Codice_cartella" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Tipo_animale" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Tipo_animale" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="codice_gabbia" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="codice_gabbia" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Codice_animale, Codice_cartella, Tipo_animale, codice_gabbia FROM animali.altro</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `animali`.`altro` SET `Codice_animale` = :Codice_animale, `Codice_cartella` = :Codice_cartella, `Tipo_animale` = :Tipo_animale, `codice_gabbia` = :codice_gabbia WHERE ((`Codice_animale` = :Original_Codice_animale) AND (`Codice_cartella` = :Original_Codice_cartella) AND (`Tipo_animale` = :Original_Tipo_animale) AND (`codice_gabbia` = :Original_codice_gabbia))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Codice_animale" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Codice_animale" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Codice_cartella" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Codice_cartella" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Tipo_animale" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Tipo_animale" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="codice_gabbia" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="codice_gabbia" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_Codice_animale" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Codice_animale" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_Codice_cartella" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Codice_cartella" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="Original_Tipo_animale" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Tipo_animale" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_codice_gabbia" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="codice_gabbia" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Codice_animale" DataSetColumn="Codice_animale" />
              <Mapping SourceColumn="Codice_cartella" DataSetColumn="Codice_cartella" />
              <Mapping SourceColumn="Tipo_animale" DataSetColumn="Tipo_animale" />
              <Mapping SourceColumn="codice_gabbia" DataSetColumn="codice_gabbia" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="animaliDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="animaliDataSet" msprop:Generator_UserDSName="animaliDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="altro" msprop:Generator_TableClassName="altroDataTable" msprop:Generator_TableVarName="tablealtro" msprop:Generator_TablePropName="altro" msprop:Generator_RowDeletingName="altroRowDeleting" msprop:Generator_RowChangingName="altroRowChanging" msprop:Generator_RowEvHandlerName="altroRowChangeEventHandler" msprop:Generator_RowDeletedName="altroRowDeleted" msprop:Generator_UserTableName="altro" msprop:Generator_RowChangedName="altroRowChanged" msprop:Generator_RowEvArgName="altroRowChangeEvent" msprop:Generator_RowClassName="altroRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Codice_animale" msprop:Generator_ColumnVarNameInTable="columnCodice_animale" msprop:Generator_ColumnPropNameInRow="Codice_animale" msprop:Generator_ColumnPropNameInTable="Codice_animaleColumn" msprop:Generator_UserColumnName="Codice_animale" type="xs:int" />
              <xs:element name="Codice_cartella" msprop:Generator_ColumnVarNameInTable="columnCodice_cartella" msprop:Generator_ColumnPropNameInRow="Codice_cartella" msprop:Generator_ColumnPropNameInTable="Codice_cartellaColumn" msprop:Generator_UserColumnName="Codice_cartella" type="xs:int" />
              <xs:element name="Tipo_animale" msprop:Generator_ColumnVarNameInTable="columnTipo_animale" msprop:Generator_ColumnPropNameInRow="Tipo_animale" msprop:Generator_ColumnPropNameInTable="Tipo_animaleColumn" msprop:Generator_UserColumnName="Tipo_animale" type="xs:string" />
              <xs:element name="codice_gabbia" msprop:Generator_ColumnVarNameInTable="columncodice_gabbia" msprop:Generator_ColumnPropNameInRow="codice_gabbia" msprop:Generator_ColumnPropNameInTable="codice_gabbiaColumn" msprop:Generator_UserColumnName="codice_gabbia" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1">
      <xs:selector xpath=".//mstns:altro" />
      <xs:field xpath="mstns:Codice_cartella" />
    </xs:unique>
    <xs:unique name="Constraint2" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:altro" />
      <xs:field xpath="mstns:Codice_animale" />
    </xs:unique>
  </xs:element>
</xs:schema>